<div class="container mt-4">
  {{> navbar isProductsPage=true}}
  <div class="d-flex justify-content-between align-items-center mt-4">
    <div>
      <h1 class="display-4">Products Management</h1>
      <p class="lead">Manage your store inventory <span class="badge bg-primary bg-opacity-10 text-primary rounded-pill px-3 py-2 ms-2"><i class="bi bi-box-seam me-1"></i>{{stats.totalProducts}} Products</span></p>
    </div>
    <div>
      <button class="btn btn-outline-secondary rounded-pill me-2" onclick="window.history.back()">
        <i class="bi bi-arrow-left"></i> Back
      </button>
      <a href="/admin/products/new" class="btn btn-success rounded-pill">
        <i class="bi bi-plus-circle me-1"></i> Add New Product
      </a>
    </div>
  </div>

  <section class="products-list my-5">
    <div class="card shadow border-0 hover-shadow">
      <div class="card-header d-flex justify-content-between align-items-center bg-white border-bottom border-light py-3">
        <h5 class="mb-0 fw-bold"><i class="bi bi-box-seam me-2 text-primary"></i>All Products</h5>
        <div class="input-group" style="max-width: 300px;">
          <input type="text" id="searchInput" class="form-control rounded-pill rounded-end" placeholder="Search products...">
          <button class="btn btn-primary rounded-pill rounded-start" type="button"><i class="bi bi-search"></i></button>
        </div>
      </div>
      <div class="card-body p-4">
        <div class="table-responsive">
          <table class="table table-hover align-middle">
            <thead class="table-light">
              <tr>
                <th scope="col">Image</th>
                <th scope="col">Name</th>
                <th scope="col">Category</th>
                <th scope="col">Price</th>
                <th scope="col">Stock</th>
                <th scope="col">Actions</th>
              </tr>
            </thead>
            <tbody>
              {{#each products}}
              <tr>
                <td><img src="{{this.image}}" alt="{{this.name}}" width="50" height="50" class="rounded"></td>
                <td>{{this.name}}</td>
                <td><span class="badge bg-info text-dark">{{this.category}}</span></td>
                <td>${{this.price}}</td>
                <td><span class="badge bg-success">In Stock</span></td>
                <td>
                  <div class="btn-group">
                    <a href="/admin/products/{{this._id}}/edit" class="btn btn-sm btn-outline-primary"><i class="bi bi-pencil"></i></a>
                    <form action="/admin/products/{{this._id}}?_method=DELETE" method="POST" class="d-inline">
                      <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this product?')"><i class="bi bi-trash"></i></button>
                    </form>
                  </div>
                </td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
        <nav aria-label="Products pagination" class="mt-4">
          <ul class="pagination justify-content-center">
            <li class="page-item disabled">
              <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
            </li>
            <li class="page-item active"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
              <a class="page-link" href="#">Next</a>
            </li>
          </ul>
        </nav>
      </div>
    </div>
  </section>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const tableBody = document.querySelector('tbody');
    
    // Debounce function to limit how often the search is performed
    function debounce(func, delay) {
      let debounceTimer;
      return function() {
        const context = this;
        const args = arguments;
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(() => func.apply(context, args), delay);
      };
    }
    
    // Function to update the product table with search results
    function updateProductTable(products) {
      // Clear the current table content
      tableBody.innerHTML = '';
      
      if (products.length === 0) {
        // If no products found, show a message
        const row = document.createElement('tr');
        row.innerHTML = `<td colspan="6" class="text-center">No products found</td>`;
        tableBody.appendChild(row);
        return;
      }
      
      // Add each product to the table
      products.forEach(product => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td><img src="${product.image || '/images/placeholder.jpg'}" alt="${product.name}" width="50" height="50" class="rounded"></td>
          <td>${product.name}</td>
          <td><span class="badge bg-info text-dark">${product.category || 'Uncategorized'}</span></td>
          <td>$${product.price}</td>
          <td><span class="badge bg-success">In Stock</span></td>
          <td>
            <div class="btn-group">
              <a href="/admin/products/${product._id}/edit" class="btn btn-sm btn-outline-primary"><i class="bi bi-pencil"></i></a>
              <form action="/admin/products/${product._id}?_method=DELETE" method="POST" class="d-inline">
                <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this product?')"><i class="bi bi-trash"></i></button>
              </form>
            </div>
          </td>
        `;
        tableBody.appendChild(row);
      });
    }
    
    // Function to perform the search
    const performSearch = debounce(function(query) {
      fetch(`/admin/search-products?q=${encodeURIComponent(query)}`)
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(products => {
          updateProductTable(products);
        })
        .catch(error => {
          console.error('Error searching products:', error);
          // If there's an error, show an error message in the table
          tableBody.innerHTML = '<tr><td colspan="6" class="text-center text-danger">Error searching products. Please try again.</td></tr>';
        });
    }, 300); // 300ms debounce delay
    
    // Add event listener for input changes
    searchInput.addEventListener('input', function() {
      performSearch(this.value);
    });
  });
</script>